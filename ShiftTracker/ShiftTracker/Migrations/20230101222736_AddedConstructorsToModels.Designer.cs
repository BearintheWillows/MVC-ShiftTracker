// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShiftTracker.Data;

#nullable disable

namespace ShiftTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230101222736_AddedConstructorsToModels")]
    partial class AddedConstructorsToModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShiftTracker.Areas.Shifts.Models.Break", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShiftId");

                    b.ToTable("Breaks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Duration = new TimeSpan(0, 1, 0, 0, 0),
                            EndTime = new DateTime(2020, 1, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            ShiftId = -1,
                            StartTime = new DateTime(2020, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -2,
                            Duration = new TimeSpan(0, 0, 15, 0, 0),
                            EndTime = new DateTime(2020, 1, 1, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            ShiftId = -1,
                            StartTime = new DateTime(2020, 1, 1, 14, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -3,
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            EndTime = new DateTime(2020, 1, 1, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            ShiftId = -1,
                            StartTime = new DateTime(2020, 1, 1, 15, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -4,
                            Duration = new TimeSpan(0, 0, 30, 0, 0),
                            EndTime = new DateTime(2023, 1, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            ShiftId = -2,
                            StartTime = new DateTime(2023, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = -5,
                            Duration = new TimeSpan(0, 0, 45, 0, 0),
                            EndTime = new DateTime(2023, 1, 1, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            ShiftId = -2,
                            StartTime = new DateTime(2023, 1, 1, 16, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ShiftTracker.Areas.Shifts.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("BreakDuration")
                        .HasColumnType("time");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("DriveTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("OtherWorkTime")
                        .HasColumnType("time");

                    b.Property<int>("RunId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ShiftDuration")
                        .HasColumnType("time");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("WorkTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Shifts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = -1,
                            BreakDuration = new TimeSpan(0, 0, 0, 0, 0),
                            Date = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DriveTime = new TimeSpan(0, 3, 30, 0, 0),
                            EndTime = new DateTime(2020, 1, 1, 17, 15, 0, 0, DateTimeKind.Unspecified),
                            OtherWorkTime = new TimeSpan(0, 0, 30, 0, 0),
                            RunId = 68,
                            ShiftDuration = new TimeSpan(0, 14, 15, 0, 0),
                            StartTime = new DateTime(2020, 1, 1, 3, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 0, 0, 0, 0)
                        },
                        new
                        {
                            Id = -2,
                            BreakDuration = new TimeSpan(0, 0, 0, 0, 0),
                            Date = new DateTime(2023, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DriveTime = new TimeSpan(0, 3, 30, 0, 0),
                            EndTime = new DateTime(2023, 1, 2, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            OtherWorkTime = new TimeSpan(0, 0, 30, 0, 0),
                            RunId = 19,
                            ShiftDuration = new TimeSpan(0, 12, 30, 0, 0),
                            StartTime = new DateTime(2023, 1, 2, 4, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkTime = new TimeSpan(0, 12, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("ShiftTracker.Areas.Shifts.Models.Break", b =>
                {
                    b.HasOne("ShiftTracker.Areas.Shifts.Models.Shift", "Shift")
                        .WithMany("Breaks")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("ShiftTracker.Areas.Shifts.Models.Shift", b =>
                {
                    b.Navigation("Breaks");
                });
#pragma warning restore 612, 618
        }
    }
}
